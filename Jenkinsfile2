pipeline {
    agent any 
    tools {
        maven 'M2_HOME'
    }
    stages {
        stage('sonarqube scan') {
            agent {
                docker {
                    image 'maven:3-amazoncorretto-17-debian'
                }
            }
            steps {
                withSonarQubeEnv('sonarserver') { 
                    sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Ghkumbe_week16C'
                }
            }
        }
        stage('all maven commands') {
            steps {
                sh 'mvn clean test compile install package'
            }
        }
        stage('upload artifact') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'aws_jenkins', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh 'curl -u $AWS_ACCESS_KEY_ID:$AWS_SECRET_ACCESS_KEY -T target/bio*.jar "http://52.55.151.238:8081/artifactory/geoapp/"' 
                }
            }
        }
        stage('image build') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'aws_jenkins', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 972859692008.dkr.ecr.us-east-1.amazonaws.com'
                    sh 'docker build -t geoapp .'
                }
            }
        }
        stage('push image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'aws_jenkins', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh 'docker tag geoapp:latest 972859692008.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
                    sh 'docker push 972859692008.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
                }
            }
        }
    }
}
